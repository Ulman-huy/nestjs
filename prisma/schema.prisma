// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  email            String             @unique
  slug             String?            @default(uuid())
  hashedPassword   String
  firstName        String?
  lastName         String?
  fullName         String?
  image            String?
  bio              String?
  location         String?
  friends          Int[]
  birthday         DateTime?
  background       String?
  createdat        DateTime           @default(now())
  updatedat        DateTime           @updatedAt
  // relationship
  posts            Post[]
  comments         Comment[]
  Image            Image[]
  ChatMessage      ChatMessage[]
  AddFriendRequest AddFriendRequest[]

  @@map("user")
}

model Post {
  id          Int       @id @default(autoincrement())
  description String?   @default("")
  images      String?   @default("")
  likes       Int[]     @default([])
  hahas       Int[]     @default([])
  dears       Int[]     @default([])
  angrys      Int[]     @default([])
  wows        Int[]     @default([])
  sads        Int[]     @default([])
  hides       Int[]     @default([])
  hearts      Int[]     @default([])
  share       Int?      @default(0)
  comment     Int?      @default(0)
  type        String?   @default("DEFAULT")
  background  String?   @default("")
  // ...
  createdat   DateTime  @default(now())
  updatedat   DateTime  @updatedAt
  // relationship
  userId      Int
  comments    Comment[]
  User        User      @relation(fields: [userId], references: [id])
  Image       Image[]

  @@map("post")
}

model Comment {
  id          Int      @id @default(autoincrement())
  description String
  image       String?
  likes       Int[]    @default([])
  hahas       Int[]    @default([])
  dears       Int[]    @default([])
  angrys      Int[]    @default([])
  wows        Int[]    @default([])
  hearts      Int[]    @default([])
  sads        Int[]    @default([])
  share       Int?     @default(0)
  feedback    Int[]    @default([])
  type        String   @default("DEFAULT")
  createdat   DateTime @default(now())
  updatedat   DateTime @updatedAt

  userId Int
  postId Int
  post   Post @relation(fields: [postId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@map("comment")
}

model Image {
  id     Int    @id @default(autoincrement())
  url    String
  postId Int?

  userId Int
  user   User  @relation(fields: [userId], references: [id])
  Post   Post? @relation(fields: [postId], references: [id])

  @@map("image")
}

model Room {
  id         Int      @id @default(autoincrement())
  status     String   @default("ACTIVE")
  listAvatar String[]
  listOwner  Int[]
  listName   String[]
  createdat  DateTime @default(now())
  updatedat  DateTime

  @@map("room")
}

model ChatMessage {
  id        Int      @id @default(autoincrement())
  message   String
  senderId  Int
  reciverId Int
  createdat DateTime @default(now())
  updatedat DateTime

  user User @relation(fields: [senderId], references: [id])

  @@map("chatMessage")
}

model AddFriendRequest {
  id        Int      @id @default(autoincrement())
  senderId  Int
  reciverId Int
  status    String   @default("WAITING")
  createdat DateTime @default(now())
  updatedat DateTime

  user User @relation(fields: [senderId], references: [id])

  @@map("addFriendRequest")
}
