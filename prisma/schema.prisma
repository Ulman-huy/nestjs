// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  slug           String?   @default(uuid())
  hashedPassword String
  firstName      String?
  lastName       String?
  fullName       String?
  image          String?
  bio            String?
  location       String?
  friends        Int[]
  birthday       DateTime?
  background     String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  // relationship
  posts          Post[]
  comments       Comment[]

  @@map("user")
}

model Post {
  id          Int       @id @default(autoincrement())
  description String
  images      String?   @default("")
  likes       Int[]     @default([])
  hahas       Int[]     @default([])
  dears       Int[]     @default([])
  angrys      Int[]     @default([])
  wows        Int[]     @default([])
  sads        Int[]     @default([])
  hides       Int[]     @default([])
  hearts      Int[]     @default([])
  share       Int?      @default(0)
  comment     Int?      @default(0)
  type        String?   @default("DEFAULT")
  background  String?   @default("")
  // ...
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  // relationship
  userId      Int
  comments    Comment[]
  User        User      @relation(fields: [userId], references: [id])

  @@map("post")
}

model Comment {
  id          Int      @id @default(autoincrement())
  description String
  image       String?
  likes       Int[]    @default([])
  hahas       Int[]    @default([])
  dears       Int[]    @default([])
  angrys      Int[]    @default([])
  wows        Int[]    @default([])
  hearts      Int[]    @default([])
  sads        Int[]    @default([])
  share       Int?     @default(0)
  feedback    Int[]    @default([])
  type        String   @default("DEFAULT")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId Int
  postId Int
  post   Post @relation(fields: [postId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@map("comment")
}
