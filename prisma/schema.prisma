// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  email            String             @unique
  slug             String?            @default(uuid())
  hashed_password  String
  first_name       String?
  last_name        String?
  full_name        String?
  image            String?
  bio              String?
  location         String?
  friends          String?
  birthday         DateTime?
  background       String?
  created_at       DateTime           @default(now())
  updated_at       DateTime           @updatedAt
  // relationship
  posts            Post[]
  comments         Comment[]
  Image            Image[]
  ChatMessage      ChatMessage[]
  AddFriendRequest AddFriendRequest[]

  @@map("user")
}

model Post {
  id          Int       @id @default(autoincrement())
  description String?   @default("")
  images      String?   @default("")
  likes       String    @default("")
  hahas       String    @default("")
  dears       String    @default("")
  angrys      String    @default("")
  wows        String    @default("")
  sads        String    @default("")
  hides       String    @default("")
  hearts      String    @default("")
  share       Int?      @default(0)
  comment     Int?      @default(0)
  type        String?   @default("DEFAULT")
  background  String?   @default("")
  // ...
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  // relationship
  user_id     Int
  comments    Comment[]
  User        User      @relation(fields: [user_id], references: [id])
  Image       Image[]

  @@map("post")
}

model Comment {
  id          Int      @id @default(autoincrement())
  description String
  image       String?
  likes       String   @default("")
  hahas       String   @default("")
  dears       String   @default("")
  angrys      String   @default("")
  wows        String   @default("")
  hearts      String   @default("")
  sads        String   @default("")
  share       Int?     @default(0)
  feedback    String   @default("")
  type        String   @default("DEFAULT")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  user_id Int
  post_id Int
  post    Post @relation(fields: [user_id], references: [id])
  user    User @relation(fields: [post_id], references: [id])

  @@map("comment")
}

model Image {
  id      Int    @id @default(autoincrement())
  url     String
  post_id Int?
  user_id Int
  user    User   @relation(fields: [user_id], references: [id])
  Post    Post?  @relation(fields: [post_id], references: [id])

  @@map("image")
}

model Room {
  id          Int      @id @default(autoincrement())
  status      String   @default("ACTIVE")
  list_avatar String[]
  list_owner  Int[]
  list_name   String[]
  created_at  DateTime @default(now())
  updated_at  DateTime

  @@map("room")
}

model ChatMessage {
  id         Int      @id @default(autoincrement())
  message    String
  sender_id  Int
  reciver_id Int
  created_at DateTime @default(now())
  updated_at DateTime

  user User @relation(fields: [sender_id], references: [id])

  @@map("chatMessage")
}

model AddFriendRequest {
  id         Int      @id @default(autoincrement())
  sender_id  Int
  reciver_id Int
  status     String   @default("WAITING")
  created_at DateTime @default(now())
  updated_at DateTime

  user User @relation(fields: [sender_id], references: [id])

  @@map("addFriendRequest")
}
